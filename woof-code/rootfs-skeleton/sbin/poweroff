#!/bin/sh
#110505 support sudo for non-root user.
#120408 support minit
#140622 shinobar avoid freeze on a virtual terminal

script=${0##*/}

 #Check if acpi or apm is supported
 if [ -d /proc/acpi ] || [ -d /proc/apm ]; then
 smartpower=1
 else
 smartpower=0
 fi

. /etc/rc.d/PUPSTATE
[ "$PUPMODE" = "5" ] && [ $PPID -eq 1 ] && touch /tmp/shutdownconfig_results && sync  #skip shutdownconfig

[ "`whoami`" != "root" ] && exec sudo -A ${0} ${@} #110505

[ "$DISPLAY" ] && which wmpoweroff &>/dev/null && exec wmpoweroff #avoid freeze on a virtual terminal

/etc/rc.d/rc.shutdown

case $script in
 poweroff)
   EXE='/bin/busybox poweroff -f'
   [ -f /sbin/minit ] && EXE='hard-reboot POWER_OFF' #note: hard-reboot is part of minit pkg.
 ;;
 reboot)
   EXE='/bin/busybox reboot -f'
   [ -f /sbin/minit ] && EXE='hard-reboot RESTART' #note, hard-reboot is part of minit pkg.
 ;;
 *) exit ;;
esac

if

if [ "$script" == "poweroff" ] && [ $smartpower -eq 1 ]; then
exec ${EXE}
elif [ "$script" == "reboot" ]; then
exec ${EXE}
else
#ACPI or APM not supported

dialog --infobox "IT'S NOW SAFE TO TURN OFF YOUR COMPUTER" 3 43

#disable shell input
while :
do
echo "wait" > /dev/null
sleep 1
done

fi

### END ###
